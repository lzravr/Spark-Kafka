wordCountJob {

  input {
    topic: "input"
  }

  output {
    topic: "output"
  }

  windowDuration: 30s

  slideDuration: 5s

  spark {
    "spark.master": "local[*]"
    "spark.app.name": "example-spark-kafka"
    "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
    "spark.kryo.registrator": "example.WordCountKryoRegistration"
  }

  streamingBatchDuration: 5s
  streamingCheckpointDir: ${java.io.tmpdir}

  kafkaSource {
    "metadata.broker.list": "localhost:9092"
    "auto.offset.reset": "largest"
  }

  kafkaSink {
    "bootstrap.servers": "localhost:9092"
    "acks": "all"
    "buffer.memory": "8388608"
    "block.on.buffer.full": "true"
    "retries": "2147483647"
    "retry.backoff.ms": "1500"
  }
}
